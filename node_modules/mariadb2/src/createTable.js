const Errors = require('./errors.js')
module.exports = (construct, cb, client) => {
  if (typeof construct !== "object") {
    cb(new Errors.InvalidDataTypeError("configuration must be an object"), null)
  } else {
    let name = construct.name !== undefined ? construct.name : () => { cb(new Errors.MissingArgumentError("You must provide the name of the table to create"), null); return null; }
    let columns = construct.columns !== undefined ? construct.columns : () => { cb(new Errors.MissingArgumentError("you must provide the columns for this table"), null); return null; }
    if (typeof name === "function" || typeof fields === "function") {
      if (typeof name === "function") name();
      if (typeof fields === "function") fields()
    } else {
      let columnText = ""
      columns.forEach(column => {
        if (column.isPrimary) {
          column.isPrimary = "PRIMARY KEY"
        } else {
          column.isPrimary = ""
        }
        if (column.allowNull) {
          column.allowNull = ""
        } else {
          column.allowNull = "NOT NULL"
        }
        if (columns.indexOf(column) !== (columns.length - 1)) {
          columnText += `${column.name} ${column.type.toUpperCase()} ${column.allowNull} ${column.isPrimary}, `
        } else {
          columnText += `${column.name} ${column.type.toUpperCase()} ${column.allowNull} ${column.isPrimary}`
        }
      })
      let sql = `CREATE TABLE ${name} (${columnText});`
      require('./query.js')(sql, cb, undefined, client, { noSQL: true })
    }
  }
}
